server {
  listen 80;
  server_name _;

  # Where your built/static site lives inside the container
  root /usr/share/nginx/html;
  index index.html;

  # --- Static files ---
  # /static/* → /usr/share/nginx/html/static/*
  location /static/ {
    alias /usr/share/nginx/html/static/;
    access_log off;
    # Long cache for hashed assets; tweak if you don't hash filenames
    add_header Cache-Control "public, max-age=31536000, immutable";
  }

  # --- Main site / SPA fallback ---
  # If you're serving a Single Page App, keep the try_files fallback to index.html.
  # If you have multiple independent HTML pages (not a SPA), change to: try_files $uri =404;
  location / {
    try_files $uri $uri/ /index.html;
  }

#   If you’re not building a SPA and you have multiple standalone pages, replace the location / block with:

# location / { try_files $uri =404; }

  # --- Reverse proxy to backend microservices ---
  # Example: /api/* → http://api-gateway:8080/*
  location /api/ {
    proxy_pass         http://api-gateway:8080/;
    proxy_http_version 1.1;
    proxy_set_header   Host              $host;
    proxy_set_header   X-Real-IP         $remote_addr;
    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;

    # If any service upgrades (SSE/WebSocket)
    proxy_set_header   Upgrade           $http_upgrade;
    proxy_set_header   Connection        $connection_upgrade;

    proxy_read_timeout 60s;
  }

  # Optional: simple CORS for API (enable only if frontend and API are on different origins)
  # location /api/ {
  #   if ($request_method = OPTIONS) {
  #     add_header Access-Control-Allow-Origin "*";
  #     add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS";
  #     add_header Access-Control-Allow-Headers "Content-Type, Authorization";
  #     return 204;
  #   }
  #   add_header Access-Control-Allow-Origin "*";
  #   proxy_pass http://api-gateway:8080/;
  #   ...
  # }
}
