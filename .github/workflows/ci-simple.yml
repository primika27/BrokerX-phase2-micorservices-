name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Create test environment variables
        run: |
          echo "JWT_SECRET=YnJva2VyWFNlY3JldEtleUZvckpXVFNpZ25pbmdTdXBlckxvbmdTdHJpbmdUaGF0SXNTZWN1cmU=" >> $GITHUB_ENV
          echo "EMAIL_USER=test@example.com" >> $GITHUB_ENV
          echo "EMAIL_PASS=testpass" >> $GITHUB_ENV

      - name: Build & test all services
        run: |
          echo "Building and compiling and testing all services..."
          
          echo "Building AuthService..."
          cd authService/authService && chmod +x ./mvnw && ./mvnw clean compile -DskipTests
          cd ../..
          
          echo "Building ClientService..."
          cd clientService/clientService && chmod +x ./mvnw && ./mvnw clean compile -DskipTests
          cd ../..
          
          echo "Building WalletService..."
          cd walletService/walletService && chmod +x ./mvnw && ./mvnw clean compile -DskipTests
          cd ../..
          
          echo "Building OrderService..."  
          cd orderService/orderService && chmod +x ./mvnw && ./mvnw clean compile -DskipTests
          cd ../..
          
          echo "Building Gateway..."
          cd gatewayService && chmod +x ./mvnw && ./mvnw clean compile -DskipTests
          cd ..
          
          echo "All services compiled successfully"

      - name: Package services
        run: |
          echo "Packaging JAR files..."
          cd authService/authService && ./mvnw clean package -DskipTests && cd ../..
          cd clientService/clientService && ./mvnw clean package -DskipTests && cd ../..
          cd walletService/walletService && ./mvnw clean package -DskipTests && cd ../..
          cd orderService/orderService && ./mvnw clean package -DskipTests && cd ../..
          cd gatewayService && ./mvnw clean package -DskipTests && cd ..
          echo "All JAR files built successfully"

  deploy:
    runs-on: self-hosted
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to VM
        run: |
          echo "Starting deployment from GitHub Actions workspace..."
          pwd && ls -la
          echo "Cleaning up existing containers and networks..."
          docker compose down --remove-orphans || true
          docker system prune -f || true
          echo "Building fresh containers..."
          docker compose build --no-cache
          echo "Starting services..."
          docker compose up -d
          echo "Deployment completed successfully"