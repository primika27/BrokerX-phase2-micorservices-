name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Create test environment variables
        run: |
          echo "JWT_SECRET=YnJva2VyWFNlY3JldEtleUZvckpXVFNpZ25pbmdTdXBlckxvbmdTdHJpbmdUaGF0SXNTZWN1cmU=" >> $GITHUB_ENV
          echo "EMAIL_USER=test@example.com" >> $GITHUB_ENV
          echo "EMAIL_PASS=testpass" >> $GITHUB_ENV

      - name: Run tests
        run: |
          echo "Testing AuthService..."
          cd authService/authService && chmod +x ./mvnw && ./mvnw clean test -Dspring.profiles.active=test
          cd ../..
          
          echo "Testing ClientService..."
          cd clientService/clientService && chmod +x ./mvnw && ./mvnw clean compile -DskipTests
          cd ../..
          
          echo "Testing WalletService..."
          cd walletService/walletService && chmod +x ./mvnw && ./mvnw clean test -Dspring.profiles.active=test
          cd ../..
          
          echo "Testing OrderService..."  
          cd orderService/orderService && chmod +x ./mvnw && ./mvnw clean test -Dspring.profiles.active=test
          cd ../..
          
          echo "Testing Gateway..."
          cd gatewayService && chmod +x ./mvnw && ./mvnw clean test -Dspring.profiles.active=test
          cd ..

      - name: Build services
        run: |
          echo "Building all microservices..."
          cd authService/authService && chmod +x ./mvnw && ./mvnw clean package -DskipTests && cd ../..
          cd clientService/clientService && chmod +x ./mvnw && ./mvnw clean package -DskipTests && cd ../..
          cd walletService/walletService && chmod +x ./mvnw && ./mvnw clean package -DskipTests && cd ../..
          cd orderService/orderService && chmod +x ./mvnw && ./mvnw clean package -DskipTests && cd ../..
          cd gatewayService && chmod +x ./mvnw && ./mvnw clean package -DskipTests && cd ..
          echo "All services built successfully"

  deploy:
    runs-on: [self-hosted, linux, phase2-microservice-runner]
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to VM
        run: |
          cd /home/log430/BrokerX-phase2-micorservices || git clone https://github.com/primika27/BrokerX-phase2-micorservices-.git /home/log430/BrokerX-phase2-micorservices
          cd /home/log430/BrokerX-phase2-micorservices
          git pull origin main
          docker compose down || true
          docker compose build --no-cache
          docker compose up -d
          echo "Deployment completed"