version: '3.8'

services:
  # Base Services
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - brokerx-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - brokerx-network

  redis:
    image: redis:7.0
    ports:
      - "6379:6379"
    networks:
      - brokerx-network

  # === 4 INSTANCES CONFIGURATION ===
  # Gateway - 4 Instances
  gateway-service-1:
    build:
      context: ./gatewayService
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8080
      - INSTANCE_ID=gateway-1
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  gateway-service-2:
    build:
      context: ./gatewayService
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8080
      - INSTANCE_ID=gateway-2
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  gateway-service-3:
    build:
      context: ./gatewayService
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8080
      - INSTANCE_ID=gateway-3
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  gateway-service-4:
    build:
      context: ./gatewayService
      dockerfile: Dockerfile
    ports:
      - "8083:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8080
      - INSTANCE_ID=gateway-4
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  # Auth Service - 4 Instances
  auth-service-1:
    build:
      context: ./authService/authService
      dockerfile: Dockerfile
    ports:
      - "8101:8101"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8101
      - INSTANCE_ID=auth-1
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  auth-service-2:
    build:
      context: ./authService/authService
      dockerfile: Dockerfile
    ports:
      - "8102:8101"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8101
      - INSTANCE_ID=auth-2
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  auth-service-3:
    build:
      context: ./authService/authService
      dockerfile: Dockerfile
    ports:
      - "8103:8101"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8101
      - INSTANCE_ID=auth-3
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  auth-service-4:
    build:
      context: ./authService/authService
      dockerfile: Dockerfile
    ports:
      - "8104:8101"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8101
      - INSTANCE_ID=auth-4
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  # Client Service - 4 Instances
  client-service-1:
    build:
      context: ./clientService/clientService
      dockerfile: Dockerfile
    ports:
      - "8201:8201"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8201
      - INSTANCE_ID=client-1
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  client-service-2:
    build:
      context: ./clientService/clientService
      dockerfile: Dockerfile
    ports:
      - "8202:8201"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8201
      - INSTANCE_ID=client-2
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  client-service-3:
    build:
      context: ./clientService/clientService
      dockerfile: Dockerfile
    ports:
      - "8203:8201"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8201
      - INSTANCE_ID=client-3
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  client-service-4:
    build:
      context: ./clientService/clientService
      dockerfile: Dockerfile
    ports:
      - "8204:8201"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8201
      - INSTANCE_ID=client-4
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  # Wallet Service - 4 Instances
  wallet-service-1:
    build:
      context: ./walletService/walletService
      dockerfile: Dockerfile
    ports:
      - "8301:8301"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8301
      - INSTANCE_ID=wallet-1
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  wallet-service-2:
    build:
      context: ./walletService/walletService
      dockerfile: Dockerfile
    ports:
      - "8302:8301"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8301
      - INSTANCE_ID=wallet-2
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  wallet-service-3:
    build:
      context: ./walletService/walletService
      dockerfile: Dockerfile
    ports:
      - "8303:8301"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8301
      - INSTANCE_ID=wallet-3
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  wallet-service-4:
    build:
      context: ./walletService/walletService
      dockerfile: Dockerfile
    ports:
      - "8304:8301"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8301
      - INSTANCE_ID=wallet-4
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  # Order Service - 4 Instances
  order-service-1:
    build:
      context: ./orderService/orderService
      dockerfile: Dockerfile
    ports:
      - "8401:8401"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8401
      - INSTANCE_ID=order-1
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  order-service-2:
    build:
      context: ./orderService/orderService
      dockerfile: Dockerfile
    ports:
      - "8402:8401"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8401
      - INSTANCE_ID=order-2
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  order-service-3:
    build:
      context: ./orderService/orderService
      dockerfile: Dockerfile
    ports:
      - "8403:8401"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8401
      - INSTANCE_ID=order-3
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  order-service-4:
    build:
      context: ./orderService/orderService
      dockerfile: Dockerfile
    ports:
      - "8404:8401"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8401
      - INSTANCE_ID=order-4
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  # Matching Service - 4 Instances
  matching-service-1:
    build:
      context: ./matchingService/matchingService
      dockerfile: Dockerfile
    ports:
      - "8501:8501"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8501
      - INSTANCE_ID=matching-1
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  matching-service-2:
    build:
      context: ./matchingService/matchingService
      dockerfile: Dockerfile
    ports:
      - "8502:8501"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8501
      - INSTANCE_ID=matching-2
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  matching-service-3:
    build:
      context: ./matchingService/matchingService
      dockerfile: Dockerfile
    ports:
      - "8503:8501"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8501
      - INSTANCE_ID=matching-3
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  matching-service-4:
    build:
      context: ./matchingService/matchingService
      dockerfile: Dockerfile
    ports:
      - "8504:8501"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8501
      - INSTANCE_ID=matching-4
    depends_on:
      - kafka
      - redis
    networks:
      - brokerx-network

  # Monitoring Stack
  nginx-lb:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./monitoring/nginx/nginx-4instances.conf:/etc/nginx/nginx.conf
    depends_on:
      - gateway-service-1
      - gateway-service-2
      - gateway-service-3
      - gateway-service-4
    networks:
      - brokerx-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus-4instances.yml:/etc/prometheus/prometheus.yml
    networks:
      - brokerx-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=brokerx123
    volumes:
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - brokerx-network

networks:
  brokerx-network:
    driver: bridge