version: '3.8'

services:

  # FRONTEND SERVICE
  frontend:
    build:
      context: ./frontend/brokerx-ui
      dockerfile: ../Dockerfile
    container_name: frontend
    ports:
      - "5173:5173"
    networks:
      - brokerx-network

  # GATEWAY SERVICE - Load Balanced
  gateway-1:
    build:
      context: ./gatewayService
      dockerfile: Dockerfile
    container_name: gateway-1
    ports:
      - "8080"
    environment:
      - JWT_SECRET=${JWT_SECRET:-brokerx-secret-key}
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8080
    depends_on:
      - auth-service
      - client-service  
      - wallet-service
      - order-service
    networks:
      - brokerx-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # AUTH SERVICE - Multiple Instances
  auth-service:
    container_name: auth-service-1
    build:
      context: ./authService/authService
      dockerfile: Dockerfile
    ports:
      - "8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8081
    volumes:
      - ./data:/data
    networks:
      - brokerx-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # CLIENT SERVICE - Multiple Instances  
  client-service:
    container_name: client-service-1
    build:
      context: ./clientService/clientService
      dockerfile: Dockerfile
    ports:
      - "8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8082
    volumes:
      - ./data:/data
    networks:
      - brokerx-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # WALLET SERVICE - Multiple Instances
  wallet-service:
    container_name: wallet-service-1
    build:
      context: ./walletService/walletService
      dockerfile: Dockerfile
    ports:
      - "8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8083
    volumes:
      - ./data:/data
    networks:
      - brokerx-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ORDER SERVICE - Multiple Instances  
  order-service:
    container_name: order-service-1
    build:
      context: ./orderService/orderService
      dockerfile: Dockerfile
    ports:
      - "8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8084
    volumes:
      - ./data:/data
    networks:
      - brokerx-network
    depends_on:
      - rabbitmq
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MATCHING SERVICE - Single Instance (stateful)
  matching-service:
    container_name: matching-service
    build:
      context: ./matchingService/matchingService
      dockerfile: Dockerfile
    ports:
      - "8085"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8085
    volumes:
      - ./data:/data
    networks:
      - brokerx-network
    depends_on:
      - rabbitmq
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8085/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # RABBITMQ MESSAGE BROKER
  rabbitmq:
    image: rabbitmq:3-management
    container_name: brokerx-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=brokerx
      - RABBITMQ_DEFAULT_PASS=brokerx123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - brokerx-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  # === MONITORING STACK ===
  nginx-lb:
    image: nginx:alpine
    container_name: brokerx-nginx-lb
    ports:
      - "80:80"
    volumes:
      - ./monitoring/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - gateway-1
      - gateway-2
    networks:
      - brokerx-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/nginx-health"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    container_name: brokerx-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - brokerx-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    container_name: brokerx-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=brokerx123
    volumes:
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - brokerx-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  rabbitmq_data:

networks:
  brokerx-network:
    driver: bridge