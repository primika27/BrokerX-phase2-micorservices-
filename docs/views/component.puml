@startuml
title Component Diagram - BrokerX Microservices Architecture

' === Gateway ===
package "Gateway Service (:8080)" {
  [GatewayConfig <<Configuration>>]
  [JwtAuthFilter <<Filter>>]
  [JwtService <<Service>>]
  [SecurityConfig <<Config>>]
}

' === AuthService ===
package "Auth Service (:8081)" {
  [AuthentificationController <<Controller>>]
  [AuthentificationService <<Service>>]
  [JwtService (Auth) <<Service>>]
  [UserCredentialRepository <<Repository>>]
  [UserCredential <<Entity>>]
  [JavaMailSender <<External>>]
  [Spring Security <<Framework>>]
  [AuthDB (H2) <<Database>>]
}

' === ClientService ===
package "Client Service (:8082)" {
  [ClientController <<Controller>>]
  [ClientService <<Service>>]
  [ClientRepository <<Repository>>]
  [Client <<Entity>>]
  [AuthClient (Feign) <<Client>>]
  [FeignConfig <<Config>>]
  [ClientDB (H2) <<Database>>]
}

' === WalletService ===
package "Wallet Service (:8083)" {
  [WalletController <<Controller>>]
  [WalletService <<Service>>]
  [WalletRepository <<Repository>>]
  [Wallet <<Entity>>]
  [WalletDB (H2) <<Database>>]
}

' === OrderService ===
package "Order Service (:8084)" {
  [OrderController <<Controller>>]
  [OrderService <<Service>>]
  [OrderRepository <<Repository>>]
  [TransactionRepository <<Repository>>]
  [Order <<Entity>>]
  [Transaction <<Entity>>]
  [WalletServiceClient (Feign) <<Client>>]
  [OrderDB (H2) <<Database>>]
}

' === Relations Inter-Services ===
[GatewayConfig] --> [AuthentificationController] : route /api/auth/**
[GatewayConfig] --> [ClientController] : route /api/clients/**
[GatewayConfig] --> [WalletController] : route /api/wallet/**
[GatewayConfig] --> [OrderController] : route /api/orders/**

' === Communication Feign ===
[ClientService] --> [AuthClient (Feign)]
[OrderService] --> [WalletServiceClient (Feign)]

' === Service <-> Repository ===
[AuthentificationService] --> [UserCredentialRepository]
[ClientService] --> [ClientRepository]
[WalletService] --> [WalletRepository]
[OrderService] --> [OrderRepository]
[OrderService] --> [TransactionRepository]

' === Repository <-> Database ===
[UserCredentialRepository] --> [AuthDB (H2)]
[ClientRepository] --> [ClientDB (H2)]
[WalletRepository] --> [WalletDB (H2)]
[OrderRepository] --> [OrderDB (H2)]
[TransactionRepository] --> [OrderDB (H2)]

' === External frameworks ===
[Spring Security] ..> [AuthentificationService]
[JavaMailSender] ..> [AuthentificationService]
[FeignConfig] ..> [ClientService]
[FeignConfig] ..> [OrderService]
[JwtAuthFilter] ..> [JwtService]

@enduml
